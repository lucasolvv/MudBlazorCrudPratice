@using MUDCRUD.Components.Domain;
@using MUDCRUD.Components.Services;
@inject IEmployeeService EmployeeService;
@inject ISnackbar Snackbar;
@inject IDialogService DialogService;

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" Model="@model">
            <MudTextField T="string" @bind-Value="model.EmployeeName" Label="Employee Name" Required="true" RequiredError="Name is required!" />
            <MudSelect T="string" Label="Gender" @bind-Value="model.Gender" Required="true" RequiredError="Gender is required!">
                <MudSelectItem Value="@("Male")">Male</MudSelectItem>
                <MudSelectItem Value="@("Female")">Female</MudSelectItem>
                <MudSelectItem Value="@("Other")">Other</MudSelectItem>
            </MudSelect>

            <MudTextField T="string" @bind-Value="model.City" Label="City" Required="true" RequiredError="City is required!" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton OnClick="Submit" Color="Color.Primary">Edit</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    private MudForm form = default!;

    [Parameter] public Contracts.EmployeeContract employee { get; set; }
    [Parameter] public string Title { get; set; }

    private Contracts.UpdateEmployeeContract model = new();

    protected override void OnInitialized()
    {
        if (employee != null)
        {
            model.Id = employee.Id;
            model.EmployeeName = employee.EmployeeName;
            model.City = employee.City;
            model.Gender = employee.Gender;
        }
    }

    private async Task Cancel() => MudDialog.Cancel();
    private async Task Submit()
    {
        await form.Validate();
        if (form.IsValid)
        {
            try
            {
                await EmployeeService.UpdateEmployeeAsync(model);
                Snackbar.Add("Employee updated successfully!", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
            catch (Exception ex)
            {
                Snackbar.Add($"Error updating employee: {ex.Message}", Severity.Error);
                return;
            }
        }
    }

}