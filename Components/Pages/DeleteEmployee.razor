@using MudBlazor
@using MUDCRUD.Components.Services
@inject IEmployeeService EmployeeService;
@inject ISnackbar Snackbar;
@inject IDialogService DialogService;

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.DeleteForever" Class="mr-3" />
            Delete Employee
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudAlert Severity="Severity.Warning" Class="my-2">
            <MudText>Are you sure you want to delete this employee?</MudText>
            <MudText Typo="Typo.subtitle2">This action cannot be undone.</MudText>
        </MudAlert>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Outlined" Color="Color.Default" OnClick="Cancel" StartIcon="@Icons.Material.Filled.Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Submit" StartIcon="@Icons.Material.Filled.Delete">Delete</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public Guid EmployeeId { get; set; }
    [Parameter] public string Message { get; set; }

    private void Cancel() => MudDialog.Cancel();
    
    private async Task Submit()
    {
        try
        {
            // Call the service to delete the employee
            await EmployeeService.DeleteEmployeeAsync(EmployeeId);
            Snackbar.Add("Employee deleted successfully!", Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error deleting employee: {ex.Message}", Severity.Error);
        }
    }
}